var moduleNews = require('../models/news');
var express = require('express');
var router = express.Router();
var promise = require('bluebird');
var auth = require('../config/auth');
var mongoose = require('mongoose');
mongoose.Promise = promise;

// moduleNews.News.find().sort({createdAt: -1})
//     .limit(MAX_LIMIT)
//     //.select(FIELDS)
//     .exec()
//     .then(function (result) {
//         if(!result) res.sendStatus(500);
//         else res.status(200).json(result);
//     });
var MAX_LIMIT = 12;

router.route('/news')
    //this route will get the data from the data base and respond to the request with required fields
    .get(function (req, res, next) {
        var page = req.query.page;    //gets the query from the request
        var source = req.query.source;
        //moduleNews.News.find({source: source}).limit(max_limit).skip(page * max_limit);
        moduleNews.News
            .find({source: source})
            .sort({timestamps: -1})
            .limit(MAX_LIMIT)
            .skip(page * MAX_LIMIT)
            //this portion needs some work....i am not sure about the else part.. figure out what the News:[] will exactly return
            .exec()
            .then(function(err, res){
                if (err) {
                    res.sendStatus(404);
                }
                else{
                    res.sendStatus(200).send({News: []});
                }
            });
        next();
    })
    //this route will post the json data generated by python to the database
    .post(auth.isAuth, function (req, res, next) {
        //The res.user checks if the user is making the request. If not then the else statement is executed
        if (!req.user) {
            res.sendStatus(401);
        }
        else {
            var news = new moduleNews.News({
                title: req.body.title,
                source: req.body.source
                //add any other things to be present in the main home page and are saved by the python code
            });
            news.save(function (err) {
                if (err) return res.sendStatus(500)
            });
        }
        next();
    })
    .delete(auth.isAuth, function (req, res, next){
        res.sendStatus();
        next();
    });

router.route('/news/:id')
    .get(function (req, res) {
        res.send({news: []});
    })
    .post(function (req, res) {
        res.sendStatus(201);
    });

module.exports = router;